package com.travelmaker.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.travelmaker.dto.Chat;
import com.travelmaker.dto.ChatList;
import com.travelmaker.service.ChatListService;

import io.swagger.annotations.ApiOperation;

@CrossOrigin(origins = { "*" })
@RestController
@RequestMapping("/api")
public class ChatListController {
	
	@Autowired
	private ChatListService chatListService;

	@RequestMapping(value = "/chatList/{uid}", method = RequestMethod.GET)
	@ApiOperation(value="모든 채팅  리턴")
	public List<ChatList> selectAllChat(@PathVariable int uid) throws Exception {
		return chatListService.selectChatListByUid(uid);
	}
	@RequestMapping(value = "/chatNoti/{uid}", method = RequestMethod.GET)
	@ApiOperation(value="알림 확인")
	public List<ChatList> selectAllNotRemovedReview(@PathVariable int uid) throws Exception {
		return chatListService.selectNotiChatListByTarget(uid);
	}
	@RequestMapping(value = "/chatNoti/{id}/{uid}", method = RequestMethod.GET)
	@ApiOperation(value="알림 확인")
	public List<ChatList> selectChatListbyFrom(@PathVariable int id, @PathVariable int uid) throws Exception {
		return chatListService.selectNotiChatListByFrom(id,uid);
	}
	
	@RequestMapping(value = "/chatNotiAll/{uid}", method = RequestMethod.GET)
	@ApiOperation(value="알림 확인")
	public List<ChatList> selectAllNotiByUid(@PathVariable int uid) throws Exception {
		return chatListService.selectAllNotiByUid(uid);
	}
	
	@RequestMapping(value = "/chatList", method = RequestMethod.POST)
	@ApiOperation(value="채팅리스트 생성")
	public int insertChat(@RequestBody ChatList cl) throws Exception {
		return chatListService.insertChatList(cl);
	}
	@RequestMapping(value = "/chatList", method = RequestMethod.PUT)
	@ApiOperation(value="채팅리스트 수정")
	public int updateChat(@RequestBody ChatList cl) throws Exception {
		return chatListService.updateChatList(cl);
	}
	
	
	@RequestMapping(value = "/chatList/{id}", method = RequestMethod.DELETE)
	@ApiOperation(value="채팅 삭제")
	public int forceDeleteChat(@PathVariable int id) throws Exception {
		return chatListService.deleteChatList(id);
	}
	
	
	
	

}
