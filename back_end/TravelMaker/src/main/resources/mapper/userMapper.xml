<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.travelmaker.dao.UserMapper">
	<!-- 회원 전체 조회 -->
	<select id="selectAllUser" resultType="user">
		SELECT * FROM user;
	</select>

	<!-- 정상 회원 전체 조회 -->
	<select id="selectNotRemovedAllUser" resultType="user">
		SELECT * FROM
		user WHERE is_remove = 'N' and cert = 'Y';
	</select>

	<!-- 로그인 -->
	<select id="loginUser" parameterType="user" resultType="user">
		SELECT *
		FROM user WHERE email=#{email} and password=#{password} and is_remove
		= 'N' and cert = 'Y';
	</select>

	<!-- 아이디 찾기 -->
	<select id="findid" parameterType="user" resultType="user">
		SELECT *
		FROM user WHERE user_name=#{user_name} and phone=#{phone};
	</select>

	<!-- 비밀번호 찾기 -->
	<select id="findpass" parameterType="user" resultType="user">
		SELECT *
		FROM user WHERE email=#{email} and phone=#{phone};
	</select>

	<!-- 회원조회 -->
	<select id="selectOneUser" parameterType="int" resultType="user">
		SELECT * FROM user WHERE id = #{id};
	</select>

	<!-- 회원조회-이메일 -->
	<select id="selectOneUserByEmail" parameterType="String"
		resultType="user">
		SELECT * FROM user WHERE email = #{email};
	</select>

	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="user">
		INSERT INTO user(birthday,
		gender, nickname, user_name, phone
		, email, password, sns_1, sns_2, about, walletAddress)
		VALUES(#{birthday}, #{gender}, #{nickname}, #{userName}, #{phone}
		, #{email}, #{password}, #{sns1}, #{sns2}, #{about}, #{walletAddress});
	</insert>

	<!-- 회원수정/회원삭제 -->
	<update id="updateUser" parameterType="user">
		UPDATE user SET birthday =
		#{birthday}, phone = #{phone}, email = #{email}
		, password = #{password}, sns_1 = #{sns1}, sns_2 = #{sns2}, about =
		#{about}
		, is_remove = #{isRemove}
		WHERE id = #{id};
	</update>

	<!-- 회원탈퇴(보류) -->
	<delete id="deleteUser" parameterType="int">
		DELETE FROM user WHERE id
		= #{id};
	</delete>

	<!-- 회원 사진 카운트 조회 -->
	<select id="selectCountUserImage" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM user_image WHERE email = #{email};
	</select>

	<!-- 회원 사진 삭제 -->
	<delete id="deleteUserImage" parameterType="String">
		DELETE FROM
		user_image WHERE email = #{email};
	</delete>

	<!-- 회원 사진 등록 -->
	<insert id="insertUserImage" parameterType="userImage">
		INSERT INTO
		user_image(email, img_name) VALUES(#{email}, #{imgName});
	</insert>

	<!-- 회원 사진 조회 -->
	<select id="selectUserImage" parameterType="String"
		resultType="userImage">
		SELECT * FROM user_image WHERE email = #{email};
	</select>

	<!-- 회원 인증키 난수 값 생성 -->
	<update id="updateCertKey" parameterType="user">
		update user set cert =
		#{cert} where email = #{email};
	</update>

	<!-- 회원 인증키(난수) Y로 변경 -->
	<update id="updateCert" parameterType="user">
		update user set cert = 'Y'
		where email = #{email} and cert = #{cert};
	</update>
</mapper>
