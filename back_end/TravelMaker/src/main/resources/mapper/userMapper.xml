<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.travelmaker.dao.UserMapper">
	<!-- 회원 전체 조회 -->
	<select id="selectAllUser" resultType="user">
		SELECT * FROM user;
	</select>
	
	<!-- 정상 회원 전체 조회 -->
	<select id="selectNotRemovedAllUser" resultType="user">
		SELECT * FROM user WHERE is_remove = 'N';
	</select>
	
	<!-- 로그인 -->
	<select id="loginUser" parameterType="user" resultType="user">
		SELECT * FROM user WHERE email=#{email} and password=#{password} and is_remove = 'N';
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findid"	parameterType="user" resultType="user">
		SELECT * FROM user WHERE user_name=#{user_name} and phone=#{phone};
	</select>
	
	<!-- 비밀번호  찾기 -->
	<select id="findpass" parameterType="user" resultType="user">
		SELECT * FROM user WHERE email=#{email} and phone=#{phone};
	</select>
	
	<!-- 회원조회 -->
	<select id="selectOneUser" parameterType="int" resultType="user">
		SELECT * FROM user WHERE id = #{id};
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="user">
		INSERT INTO user(birthday, gender, nickname, user_name, phone
                   , email, password, sns_1, sns_2, taste_1, taste_2
                   , taste_3, taste_4, taste_5, taste_6, taste_7, about) 
			   VALUES(#{birthday}, #{gender}, #{nickname}, #{userName}, #{phone}
	                   , #{email}, #{password}, #{sns1}, #{sns2}, #{taste1}, #{taste2}
	                   , #{taste3}, #{taste4}, #{taste5}, #{taste6}, #{taste7}, #{about});
	</insert>
	
	<!-- 회원수정/회원삭제 -->
	<update id="updateUser" parameterType="user">
		UPDATE user SET birthday = #{birthday} , phone = #{phone} , email = #{email} , password = #{password}
			     , sns_1 = #{sns1}  , sns_2 = #{sns2} , taste_1 = #{taste1}  , taste_2 = #{taste2} , taste_3  = #{taste3}  
			     , taste_4  = #{taste4}  , taste_5 = #{taste5}  , taste_6 = #{taste6}  , taste_7 = #{taste7}  , about = #{about}
			     , is_remove = #{isRemove}
		 WHERE id = #{id};
	</update>
	
	<!-- 회원탈퇴(보류) -->	
	<delete id="deleteUser" parameterType="int">
		DELETE FROM USER WHERE id = #{id};
	</delete>
</mapper>
